// Code generated by protoc-gen-go.
// source: dzhyun.historytrends.proto
// DO NOT EDIT!

package dzhyun

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type YueKXianShuJu struct {
	Nian    int64 `protobuf:"varint,1,opt,name=Nian" json:"Nian,omitempty"`
	ZhangFu int64 `protobuf:"varint,2,opt,name=ZhangFu" json:"ZhangFu,omitempty"`
}

func (m *YueKXianShuJu) Reset()                    { *m = YueKXianShuJu{} }
func (m *YueKXianShuJu) String() string            { return proto.CompactTextString(m) }
func (*YueKXianShuJu) ProtoMessage()               {}
func (*YueKXianShuJu) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{0} }

func (m *YueKXianShuJu) GetNian() int64 {
	if m != nil {
		return m.Nian
	}
	return 0
}

func (m *YueKXianShuJu) GetZhangFu() int64 {
	if m != nil {
		return m.ZhangFu
	}
	return 0
}

type YueZouShiShuJu struct {
	Yue             int64            `protobuf:"varint,1,opt,name=Yue" json:"Yue,omitempty"`
	YueKXian        []*YueKXianShuJu `protobuf:"bytes,2,rep,name=YueKXian" json:"YueKXian,omitempty"`
	ShangZhangGaiLv int64            `protobuf:"varint,3,opt,name=ShangZhangGaiLv" json:"ShangZhangGaiLv,omitempty"`
	PingJunZhangFu  int64            `protobuf:"varint,4,opt,name=PingJunZhangFu" json:"PingJunZhangFu,omitempty"`
}

func (m *YueZouShiShuJu) Reset()                    { *m = YueZouShiShuJu{} }
func (m *YueZouShiShuJu) String() string            { return proto.CompactTextString(m) }
func (*YueZouShiShuJu) ProtoMessage()               {}
func (*YueZouShiShuJu) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{1} }

func (m *YueZouShiShuJu) GetYue() int64 {
	if m != nil {
		return m.Yue
	}
	return 0
}

func (m *YueZouShiShuJu) GetYueKXian() []*YueKXianShuJu {
	if m != nil {
		return m.YueKXian
	}
	return nil
}

func (m *YueZouShiShuJu) GetShangZhangGaiLv() int64 {
	if m != nil {
		return m.ShangZhangGaiLv
	}
	return 0
}

func (m *YueZouShiShuJu) GetPingJunZhangFu() int64 {
	if m != nil {
		return m.PingJunZhangFu
	}
	return 0
}

type HistoryTrends struct {
	Obj       string            `protobuf:"bytes,1,opt,name=Obj" json:"Obj,omitempty"`
	YueZouShi []*YueZouShiShuJu `protobuf:"bytes,2,rep,name=YueZouShi" json:"YueZouShi,omitempty"`
}

func (m *HistoryTrends) Reset()                    { *m = HistoryTrends{} }
func (m *HistoryTrends) String() string            { return proto.CompactTextString(m) }
func (*HistoryTrends) ProtoMessage()               {}
func (*HistoryTrends) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{2} }

func (m *HistoryTrends) GetObj() string {
	if m != nil {
		return m.Obj
	}
	return ""
}

func (m *HistoryTrends) GetYueZouShi() []*YueZouShiShuJu {
	if m != nil {
		return m.YueZouShi
	}
	return nil
}

type MonthTrends struct {
	Obj      string           `protobuf:"bytes,1,opt,name=Obj" json:"Obj,omitempty"`
	HangQing []*LiShiHangQing `protobuf:"bytes,2,rep,name=HangQing" json:"HangQing,omitempty"`
}

func (m *MonthTrends) Reset()                    { *m = MonthTrends{} }
func (m *MonthTrends) String() string            { return proto.CompactTextString(m) }
func (*MonthTrends) ProtoMessage()               {}
func (*MonthTrends) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{3} }

func (m *MonthTrends) GetObj() string {
	if m != nil {
		return m.Obj
	}
	return ""
}

func (m *MonthTrends) GetHangQing() []*LiShiHangQing {
	if m != nil {
		return m.HangQing
	}
	return nil
}

func init() {
	proto.RegisterType((*YueKXianShuJu)(nil), "dzhyun.YueKXianShuJu")
	proto.RegisterType((*YueZouShiShuJu)(nil), "dzhyun.YueZouShiShuJu")
	proto.RegisterType((*HistoryTrends)(nil), "dzhyun.HistoryTrends")
	proto.RegisterType((*MonthTrends)(nil), "dzhyun.MonthTrends")
}

func init() { proto.RegisterFile("dzhyun.historytrends.proto", fileDescriptor8) }

var fileDescriptor8 = []byte{
	// 296 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x74, 0x91, 0x4d, 0x6b, 0xf2, 0x40,
	0x10, 0xc7, 0xd1, 0x88, 0x8f, 0x8e, 0xe8, 0x23, 0x0b, 0x2d, 0x8b, 0x27, 0xc9, 0xa1, 0xe4, 0x14,
	0xb0, 0xed, 0xb5, 0x97, 0x1e, 0x5a, 0xb1, 0xf6, 0x6d, 0x53, 0x68, 0xe3, 0x2d, 0x6a, 0xc8, 0x4e,
	0xa1, 0xb3, 0x92, 0xec, 0x0a, 0xf6, 0x0b, 0xf5, 0x6b, 0x96, 0x6c, 0x5e, 0x6a, 0x03, 0x3d, 0xed,
	0xec, 0xcc, 0x6f, 0xe7, 0xff, 0x9f, 0x59, 0x98, 0x6c, 0x3f, 0xe5, 0xc1, 0x90, 0x2f, 0x31, 0xd3,
	0x2a, 0x3d, 0xe8, 0x34, 0xa6, 0x6d, 0xe6, 0xef, 0x52, 0xa5, 0x15, 0xeb, 0x16, 0xb5, 0x09, 0x2f,
	0x19, 0xad, 0x76, 0xb8, 0x41, 0xda, 0xc7, 0x99, 0x2e, 0x08, 0xf7, 0x0a, 0x86, 0xa1, 0x89, 0xef,
	0xde, 0x30, 0xa2, 0x40, 0x9a, 0x85, 0x61, 0x0c, 0x3a, 0x0f, 0x18, 0x11, 0x6f, 0x4d, 0x5b, 0x9e,
	0x23, 0x6c, 0xcc, 0x38, 0xfc, 0x5b, 0xc9, 0x88, 0x92, 0x1b, 0xc3, 0xdb, 0x36, 0x5d, 0x5d, 0xdd,
	0xaf, 0x16, 0x8c, 0x42, 0x13, 0xaf, 0x94, 0x09, 0x24, 0x16, 0x0d, 0xc6, 0xe0, 0x84, 0x26, 0x2e,
	0xdf, 0xe7, 0x21, 0x9b, 0x41, 0xaf, 0xd2, 0xe0, 0xed, 0xa9, 0xe3, 0x0d, 0xce, 0x4f, 0xfc, 0xd2,
	0xd0, 0x2f, 0x6d, 0x51, 0x63, 0xcc, 0x83, 0xff, 0x41, 0x2e, 0x61, 0x75, 0x6e, 0x23, 0x5c, 0xee,
	0xb9, 0x63, 0x1b, 0x36, 0xd3, 0xec, 0x0c, 0x46, 0x4f, 0x48, 0xc9, 0xc2, 0x50, 0x65, 0xb1, 0x63,
	0xc1, 0x46, 0xd6, 0x7d, 0x85, 0xe1, 0xbc, 0xd8, 0xd0, 0x8b, 0xdd, 0x50, 0xee, 0xf3, 0x71, 0xfd,
	0x6e, 0x7d, 0xf6, 0x45, 0x1e, 0xb2, 0x4b, 0xe8, 0xd7, 0xb3, 0x94, 0x46, 0x4f, 0x8f, 0x8c, 0x1e,
	0x0d, 0x29, 0x7e, 0x40, 0x57, 0xc0, 0xe0, 0x5e, 0x91, 0x96, 0x7f, 0xb6, 0x9d, 0x41, 0x6f, 0x1e,
	0x51, 0xf2, 0x8c, 0x94, 0x34, 0xc7, 0x5f, 0x62, 0x20, 0xb1, 0x2a, 0x8a, 0x1a, 0xbb, 0x66, 0x30,
	0xde, 0xa8, 0x8f, 0x8a, 0xb2, 0x3f, 0xb5, 0xee, 0xda, 0xe3, 0xe2, 0x3b, 0x00, 0x00, 0xff, 0xff,
	0x16, 0xae, 0x52, 0x81, 0xf0, 0x01, 0x00, 0x00,
}
