// Code generated by protoc-gen-go.
// source: dzhyun.zhubi.proto
// DO NOT EDIT!

package dzhyun

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// 逐笔当日存储结构
type ZhubiDangri struct {
	Id             yfloat `protobuf:"varint,1,opt,name=Id" json:"Id,omitempty"`
	ShiJian        yfloat `protobuf:"varint,2,opt,name=ShiJian" json:"ShiJian,omitempty"`
	ZuiXinJia      yfloat `protobuf:"varint,3,opt,name=ZuiXinJia" json:"ZuiXinJia,omitempty"`
	ChengJiaoLiang yfloat `protobuf:"varint,4,opt,name=ChengJiaoLiang" json:"ChengJiaoLiang,omitempty"`
	ZhubiId        yfloat `protobuf:"varint,5,opt,name=ZhubiId" json:"ZhubiId,omitempty"`
}

func (m *ZhubiDangri) Reset()                    { *m = ZhubiDangri{} }
func (m *ZhubiDangri) String() string            { return proto.CompactTextString(m) }
func (*ZhubiDangri) ProtoMessage()               {}
func (*ZhubiDangri) Descriptor() ([]byte, []int) { return fileDescriptor15, []int{0} }

func (m *ZhubiDangri) GetId() yfloat {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ZhubiDangri) GetShiJian() yfloat {
	if m != nil {
		return m.ShiJian
	}
	return 0
}

func (m *ZhubiDangri) GetZuiXinJia() yfloat {
	if m != nil {
		return m.ZuiXinJia
	}
	return 0
}

func (m *ZhubiDangri) GetChengJiaoLiang() yfloat {
	if m != nil {
		return m.ChengJiaoLiang
	}
	return 0
}

func (m *ZhubiDangri) GetZhubiId() yfloat {
	if m != nil {
		return m.ZhubiId
	}
	return 0
}

func init() {
	proto.RegisterType((*ZhubiDangri)(nil), "dzhyun.ZhubiDangri")
}

func init() { proto.RegisterFile("dzhyun.zhubi.proto", fileDescriptor15) }

var fileDescriptor15 = []byte{
	// 167 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0x12, 0x4a, 0xa9, 0xca, 0xa8,
	0x2c, 0xcd, 0xd3, 0xab, 0xca, 0x28, 0x4d, 0xca, 0xd4, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62,
	0x83, 0x88, 0x29, 0x4d, 0x67, 0xe4, 0xe2, 0x8e, 0x02, 0x89, 0xbb, 0x24, 0xe6, 0xa5, 0x17, 0x65,
	0x0a, 0xf1, 0x71, 0x31, 0x79, 0xa6, 0x48, 0x30, 0x2a, 0x30, 0x6a, 0x30, 0x07, 0x31, 0x79, 0xa6,
	0x08, 0x49, 0x70, 0xb1, 0x07, 0x67, 0x64, 0x7a, 0x65, 0x26, 0xe6, 0x49, 0x30, 0x81, 0x05, 0x61,
	0x5c, 0x21, 0x19, 0x2e, 0xce, 0xa8, 0xd2, 0xcc, 0x88, 0xcc, 0x3c, 0xaf, 0xcc, 0x44, 0x09, 0x66,
	0xb0, 0x1c, 0x42, 0x40, 0x48, 0x8d, 0x8b, 0xcf, 0x39, 0x23, 0x35, 0x2f, 0xdd, 0x2b, 0x33, 0x31,
	0xdf, 0x27, 0x33, 0x31, 0x2f, 0x5d, 0x82, 0x05, 0xac, 0x04, 0x4d, 0x14, 0x64, 0x3e, 0xd8, 0x7a,
	0xcf, 0x14, 0x09, 0x56, 0x88, 0xf9, 0x50, 0xae, 0x93, 0x10, 0x97, 0x40, 0x72, 0x7e, 0xae, 0x1e,
	0xd4, 0xed, 0x60, 0x57, 0x27, 0xb1, 0x81, 0x29, 0x63, 0x40, 0x00, 0x00, 0x00, 0xff, 0xff, 0x7b,
	0x41, 0x9e, 0xe6, 0xd2, 0x00, 0x00, 0x00,
}
