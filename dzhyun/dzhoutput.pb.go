// Code generated by protoc-gen-go.
// source: dzhoutput.proto
// DO NOT EDIT!

package dzhyun

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type QuoteDyna struct {
	Time      int32   `protobuf:"varint,1,opt,name=Time" json:"Time,omitempty"`
	LastClose float32 `protobuf:"fixed32,2,opt,name=LastClose" json:"LastClose,omitempty"`
	High      float32 `protobuf:"fixed32,3,opt,name=High" json:"High,omitempty"`
	Open      float32 `protobuf:"fixed32,4,opt,name=Open" json:"Open,omitempty"`
	Low       float32 `protobuf:"fixed32,5,opt,name=Low" json:"Low,omitempty"`
	New       float32 `protobuf:"fixed32,6,opt,name=New" json:"New,omitempty"`
	Volume    float32 `protobuf:"fixed32,7,opt,name=Volume" json:"Volume,omitempty"`
	Amount    float32 `protobuf:"fixed32,8,opt,name=Amount" json:"Amount,omitempty"`
}

func (m *QuoteDyna) Reset()                    { *m = QuoteDyna{} }
func (m *QuoteDyna) String() string            { return proto.CompactTextString(m) }
func (*QuoteDyna) ProtoMessage()               {}
func (*QuoteDyna) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *QuoteDyna) GetTime() int32 {
	if m != nil {
		return m.Time
	}
	return 0
}

func (m *QuoteDyna) GetLastClose() float32 {
	if m != nil {
		return m.LastClose
	}
	return 0
}

func (m *QuoteDyna) GetHigh() float32 {
	if m != nil {
		return m.High
	}
	return 0
}

func (m *QuoteDyna) GetOpen() float32 {
	if m != nil {
		return m.Open
	}
	return 0
}

func (m *QuoteDyna) GetLow() float32 {
	if m != nil {
		return m.Low
	}
	return 0
}

func (m *QuoteDyna) GetNew() float32 {
	if m != nil {
		return m.New
	}
	return 0
}

func (m *QuoteDyna) GetVolume() float32 {
	if m != nil {
		return m.Volume
	}
	return 0
}

func (m *QuoteDyna) GetAmount() float32 {
	if m != nil {
		return m.Amount
	}
	return 0
}

type QuoteDynaSingle struct {
	Obj  string       `protobuf:"bytes,1,opt,name=Obj" json:"Obj,omitempty"`
	Data *GeGuDongTai `protobuf:"bytes,2,opt,name=Data" json:"Data,omitempty"`
}

func (m *QuoteDynaSingle) Reset()                    { *m = QuoteDynaSingle{} }
func (m *QuoteDynaSingle) String() string            { return proto.CompactTextString(m) }
func (*QuoteDynaSingle) ProtoMessage()               {}
func (*QuoteDynaSingle) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *QuoteDynaSingle) GetObj() string {
	if m != nil {
		return m.Obj
	}
	return ""
}

func (m *QuoteDynaSingle) GetData() *GeGuDongTai {
	if m != nil {
		return m.Data
	}
	return nil
}

type QuoteDynaOutput struct {
	Results []*QuoteDynaSingle `protobuf:"bytes,1,rep,name=Results" json:"Results,omitempty"`
}

func (m *QuoteDynaOutput) Reset()                    { *m = QuoteDynaOutput{} }
func (m *QuoteDynaOutput) String() string            { return proto.CompactTextString(m) }
func (*QuoteDynaOutput) ProtoMessage()               {}
func (*QuoteDynaOutput) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2} }

func (m *QuoteDynaOutput) GetResults() []*QuoteDynaSingle {
	if m != nil {
		return m.Results
	}
	return nil
}

type QuoteKline struct {
	Time      int32   `protobuf:"varint,1,opt,name=Time" json:"Time,omitempty"`
	High      float32 `protobuf:"fixed32,2,opt,name=High" json:"High,omitempty"`
	Open      float32 `protobuf:"fixed32,3,opt,name=Open" json:"Open,omitempty"`
	Low       float32 `protobuf:"fixed32,4,opt,name=Low" json:"Low,omitempty"`
	Close     float32 `protobuf:"fixed32,5,opt,name=Close" json:"Close,omitempty"`
	Volume    float32 `protobuf:"fixed32,6,opt,name=Volume" json:"Volume,omitempty"`
	Amount    float32 `protobuf:"fixed32,7,opt,name=Amount" json:"Amount,omitempty"`
	TickCount int32   `protobuf:"varint,8,opt,name=TickCount" json:"TickCount,omitempty"`
	Advance   int32   `protobuf:"varint,9,opt,name=Advance" json:"Advance,omitempty"`
	Decline   int32   `protobuf:"varint,10,opt,name=Decline" json:"Decline,omitempty"`
}

func (m *QuoteKline) Reset()                    { *m = QuoteKline{} }
func (m *QuoteKline) String() string            { return proto.CompactTextString(m) }
func (*QuoteKline) ProtoMessage()               {}
func (*QuoteKline) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{3} }

func (m *QuoteKline) GetTime() int32 {
	if m != nil {
		return m.Time
	}
	return 0
}

func (m *QuoteKline) GetHigh() float32 {
	if m != nil {
		return m.High
	}
	return 0
}

func (m *QuoteKline) GetOpen() float32 {
	if m != nil {
		return m.Open
	}
	return 0
}

func (m *QuoteKline) GetLow() float32 {
	if m != nil {
		return m.Low
	}
	return 0
}

func (m *QuoteKline) GetClose() float32 {
	if m != nil {
		return m.Close
	}
	return 0
}

func (m *QuoteKline) GetVolume() float32 {
	if m != nil {
		return m.Volume
	}
	return 0
}

func (m *QuoteKline) GetAmount() float32 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *QuoteKline) GetTickCount() int32 {
	if m != nil {
		return m.TickCount
	}
	return 0
}

func (m *QuoteKline) GetAdvance() int32 {
	if m != nil {
		return m.Advance
	}
	return 0
}

func (m *QuoteKline) GetDecline() int32 {
	if m != nil {
		return m.Decline
	}
	return 0
}

type QuoteKlineSingle struct {
	Obj  string   `protobuf:"bytes,1,opt,name=Obj" json:"Obj,omitempty"`
	Data []*KXian `protobuf:"bytes,2,rep,name=Data" json:"Data,omitempty"`
}

func (m *QuoteKlineSingle) Reset()                    { *m = QuoteKlineSingle{} }
func (m *QuoteKlineSingle) String() string            { return proto.CompactTextString(m) }
func (*QuoteKlineSingle) ProtoMessage()               {}
func (*QuoteKlineSingle) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{4} }

func (m *QuoteKlineSingle) GetObj() string {
	if m != nil {
		return m.Obj
	}
	return ""
}

func (m *QuoteKlineSingle) GetData() []*KXian {
	if m != nil {
		return m.Data
	}
	return nil
}

type QuoteKlineOutput struct {
	Results []*QuoteKlineSingle `protobuf:"bytes,1,rep,name=Results" json:"Results,omitempty"`
}

func (m *QuoteKlineOutput) Reset()                    { *m = QuoteKlineOutput{} }
func (m *QuoteKlineOutput) String() string            { return proto.CompactTextString(m) }
func (*QuoteKlineOutput) ProtoMessage()               {}
func (*QuoteKlineOutput) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{5} }

func (m *QuoteKlineOutput) GetResults() []*QuoteKlineSingle {
	if m != nil {
		return m.Results
	}
	return nil
}

// 分笔
type QuoteTick struct {
	Time       int32     `protobuf:"varint,1,opt,name=Time" json:"Time,omitempty"`
	Price      float32   `protobuf:"fixed32,2,opt,name=Price" json:"Price,omitempty"`
	Volume     float32   `protobuf:"fixed32,3,opt,name=Volume" json:"Volume,omitempty"`
	Amount     float32   `protobuf:"fixed32,4,opt,name=Amount" json:"Amount,omitempty"`
	TickCount  int32     `protobuf:"varint,5,opt,name=TickCount" json:"TickCount,omitempty"`
	BuyPrice   []float32 `protobuf:"fixed32,6,rep,packed,name=BuyPrice" json:"BuyPrice,omitempty"`
	BuyVolume  []float32 `protobuf:"fixed32,7,rep,packed,name=BuyVolume" json:"BuyVolume,omitempty"`
	SellPrice  []float32 `protobuf:"fixed32,8,rep,packed,name=SellPrice" json:"SellPrice,omitempty"`
	SellVolume []float32 `protobuf:"fixed32,9,rep,packed,name=SellVolume" json:"SellVolume,omitempty"`
	Outter     int32     `protobuf:"varint,10,opt,name=Outter" json:"Outter,omitempty"`
}

func (m *QuoteTick) Reset()                    { *m = QuoteTick{} }
func (m *QuoteTick) String() string            { return proto.CompactTextString(m) }
func (*QuoteTick) ProtoMessage()               {}
func (*QuoteTick) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{6} }

func (m *QuoteTick) GetTime() int32 {
	if m != nil {
		return m.Time
	}
	return 0
}

func (m *QuoteTick) GetPrice() float32 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *QuoteTick) GetVolume() float32 {
	if m != nil {
		return m.Volume
	}
	return 0
}

func (m *QuoteTick) GetAmount() float32 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *QuoteTick) GetTickCount() int32 {
	if m != nil {
		return m.TickCount
	}
	return 0
}

func (m *QuoteTick) GetBuyPrice() []float32 {
	if m != nil {
		return m.BuyPrice
	}
	return nil
}

func (m *QuoteTick) GetBuyVolume() []float32 {
	if m != nil {
		return m.BuyVolume
	}
	return nil
}

func (m *QuoteTick) GetSellPrice() []float32 {
	if m != nil {
		return m.SellPrice
	}
	return nil
}

func (m *QuoteTick) GetSellVolume() []float32 {
	if m != nil {
		return m.SellVolume
	}
	return nil
}

func (m *QuoteTick) GetOutter() int32 {
	if m != nil {
		return m.Outter
	}
	return 0
}

type QuoteTickSingle struct {
	Obj     string            `protobuf:"bytes,1,opt,name=Obj" json:"Obj,omitempty"`
	Data    []*FenBiChengJiao `protobuf:"bytes,2,rep,name=Data" json:"Data,omitempty"`
	QingPan int64             `protobuf:"varint,3,opt,name=QingPan" json:"QingPan,omitempty"`
}

func (m *QuoteTickSingle) Reset()                    { *m = QuoteTickSingle{} }
func (m *QuoteTickSingle) String() string            { return proto.CompactTextString(m) }
func (*QuoteTickSingle) ProtoMessage()               {}
func (*QuoteTickSingle) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{7} }

func (m *QuoteTickSingle) GetObj() string {
	if m != nil {
		return m.Obj
	}
	return ""
}

func (m *QuoteTickSingle) GetData() []*FenBiChengJiao {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *QuoteTickSingle) GetQingPan() int64 {
	if m != nil {
		return m.QingPan
	}
	return 0
}

type QuoteTickOutput struct {
	Results []*QuoteTickSingle `protobuf:"bytes,1,rep,name=Results" json:"Results,omitempty"`
}

func (m *QuoteTickOutput) Reset()                    { *m = QuoteTickOutput{} }
func (m *QuoteTickOutput) String() string            { return proto.CompactTextString(m) }
func (*QuoteTickOutput) ProtoMessage()               {}
func (*QuoteTickOutput) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{8} }

func (m *QuoteTickOutput) GetResults() []*QuoteTickSingle {
	if m != nil {
		return m.Results
	}
	return nil
}

// 分时
type QuoteMin struct {
	Time       int32     `protobuf:"varint,1,opt,name=Time" json:"Time,omitempty"`
	Price      float32   `protobuf:"fixed32,2,opt,name=Price" json:"Price,omitempty"`
	Volume     float32   `protobuf:"fixed32,3,opt,name=Volume" json:"Volume,omitempty"`
	Amount     float32   `protobuf:"fixed32,4,opt,name=Amount" json:"Amount,omitempty"`
	TickCount  int32     `protobuf:"varint,5,opt,name=TickCount" json:"TickCount,omitempty"`
	BuyPrice   []float32 `protobuf:"fixed32,6,rep,packed,name=BuyPrice" json:"BuyPrice,omitempty"`
	BuyVolume  []float32 `protobuf:"fixed32,7,rep,packed,name=BuyVolume" json:"BuyVolume,omitempty"`
	SellPrice  []float32 `protobuf:"fixed32,8,rep,packed,name=SellPrice" json:"SellPrice,omitempty"`
	SellVolume []float32 `protobuf:"fixed32,9,rep,packed,name=SellVolume" json:"SellVolume,omitempty"`
}

func (m *QuoteMin) Reset()                    { *m = QuoteMin{} }
func (m *QuoteMin) String() string            { return proto.CompactTextString(m) }
func (*QuoteMin) ProtoMessage()               {}
func (*QuoteMin) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{9} }

func (m *QuoteMin) GetTime() int32 {
	if m != nil {
		return m.Time
	}
	return 0
}

func (m *QuoteMin) GetPrice() float32 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *QuoteMin) GetVolume() float32 {
	if m != nil {
		return m.Volume
	}
	return 0
}

func (m *QuoteMin) GetAmount() float32 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *QuoteMin) GetTickCount() int32 {
	if m != nil {
		return m.TickCount
	}
	return 0
}

func (m *QuoteMin) GetBuyPrice() []float32 {
	if m != nil {
		return m.BuyPrice
	}
	return nil
}

func (m *QuoteMin) GetBuyVolume() []float32 {
	if m != nil {
		return m.BuyVolume
	}
	return nil
}

func (m *QuoteMin) GetSellPrice() []float32 {
	if m != nil {
		return m.SellPrice
	}
	return nil
}

func (m *QuoteMin) GetSellVolume() []float32 {
	if m != nil {
		return m.SellVolume
	}
	return nil
}

type QuoteMinSingle struct {
	Obj                string                                    `protobuf:"bytes,1,opt,name=Obj" json:"Obj,omitempty"`
	Data               []*FenShi                                 `protobuf:"bytes,2,rep,name=Data" json:"Data,omitempty"`
	RiQi               int64                                     `protobuf:"varint,3,opt,name=RiQi" json:"RiQi,omitempty"`
	ShiQu              int64                                     `protobuf:"varint,4,opt,name=ShiQu" json:"ShiQu,omitempty"`
	JiHeJingJiaDianShu int64                                     `protobuf:"varint,5,opt,name=JiHeJingJiaDianShu" json:"JiHeJingJiaDianShu,omitempty"`
	JiaoYiShiJianDuan  []*QuoteMinSingle_JiaoYiShiJianDuanJieGou `protobuf:"bytes,6,rep,name=JiaoYiShiJianDuan" json:"JiaoYiShiJianDuan,omitempty"`
	ZuoShou            int64                                     `protobuf:"varint,7,opt,name=ZuoShou" json:"ZuoShou,omitempty"`
	QingPan            int64                                     `protobuf:"varint,8,opt,name=QingPan" json:"QingPan,omitempty"`
	ZuoRiJieSuanJia    int64                                     `protobuf:"varint,9,opt,name=ZuoRiJieSuanJia" json:"ZuoRiJieSuanJia,omitempty"`
	LiShiFenShi        []*FenShiLishi                            `protobuf:"bytes,10,rep,name=LiShiFenShi" json:"LiShiFenShi,omitempty"`
}

func (m *QuoteMinSingle) Reset()                    { *m = QuoteMinSingle{} }
func (m *QuoteMinSingle) String() string            { return proto.CompactTextString(m) }
func (*QuoteMinSingle) ProtoMessage()               {}
func (*QuoteMinSingle) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{10} }

func (m *QuoteMinSingle) GetObj() string {
	if m != nil {
		return m.Obj
	}
	return ""
}

func (m *QuoteMinSingle) GetData() []*FenShi {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *QuoteMinSingle) GetRiQi() int64 {
	if m != nil {
		return m.RiQi
	}
	return 0
}

func (m *QuoteMinSingle) GetShiQu() int64 {
	if m != nil {
		return m.ShiQu
	}
	return 0
}

func (m *QuoteMinSingle) GetJiHeJingJiaDianShu() int64 {
	if m != nil {
		return m.JiHeJingJiaDianShu
	}
	return 0
}

func (m *QuoteMinSingle) GetJiaoYiShiJianDuan() []*QuoteMinSingle_JiaoYiShiJianDuanJieGou {
	if m != nil {
		return m.JiaoYiShiJianDuan
	}
	return nil
}

func (m *QuoteMinSingle) GetZuoShou() int64 {
	if m != nil {
		return m.ZuoShou
	}
	return 0
}

func (m *QuoteMinSingle) GetQingPan() int64 {
	if m != nil {
		return m.QingPan
	}
	return 0
}

func (m *QuoteMinSingle) GetZuoRiJieSuanJia() int64 {
	if m != nil {
		return m.ZuoRiJieSuanJia
	}
	return 0
}

func (m *QuoteMinSingle) GetLiShiFenShi() []*FenShiLishi {
	if m != nil {
		return m.LiShiFenShi
	}
	return nil
}

type QuoteMinSingle_JiaoYiShiJianDuanJieGou struct {
	KaiShiShiJian int64 `protobuf:"varint,1,opt,name=KaiShiShiJian" json:"KaiShiShiJian,omitempty"`
	JieShuShiJian int64 `protobuf:"varint,2,opt,name=JieShuShiJian" json:"JieShuShiJian,omitempty"`
	KaiShiRiQi    int64 `protobuf:"varint,3,opt,name=KaiShiRiQi" json:"KaiShiRiQi,omitempty"`
	JieShuRiQi    int64 `protobuf:"varint,4,opt,name=JieShuRiQi" json:"JieShuRiQi,omitempty"`
}

func (m *QuoteMinSingle_JiaoYiShiJianDuanJieGou) Reset() {
	*m = QuoteMinSingle_JiaoYiShiJianDuanJieGou{}
}
func (m *QuoteMinSingle_JiaoYiShiJianDuanJieGou) String() string { return proto.CompactTextString(m) }
func (*QuoteMinSingle_JiaoYiShiJianDuanJieGou) ProtoMessage()    {}
func (*QuoteMinSingle_JiaoYiShiJianDuanJieGou) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{10, 0}
}

func (m *QuoteMinSingle_JiaoYiShiJianDuanJieGou) GetKaiShiShiJian() int64 {
	if m != nil {
		return m.KaiShiShiJian
	}
	return 0
}

func (m *QuoteMinSingle_JiaoYiShiJianDuanJieGou) GetJieShuShiJian() int64 {
	if m != nil {
		return m.JieShuShiJian
	}
	return 0
}

func (m *QuoteMinSingle_JiaoYiShiJianDuanJieGou) GetKaiShiRiQi() int64 {
	if m != nil {
		return m.KaiShiRiQi
	}
	return 0
}

func (m *QuoteMinSingle_JiaoYiShiJianDuanJieGou) GetJieShuRiQi() int64 {
	if m != nil {
		return m.JieShuRiQi
	}
	return 0
}

type QuoteMinOutput struct {
	Results []*QuoteMinSingle `protobuf:"bytes,1,rep,name=Results" json:"Results,omitempty"`
}

func (m *QuoteMinOutput) Reset()                    { *m = QuoteMinOutput{} }
func (m *QuoteMinOutput) String() string            { return proto.CompactTextString(m) }
func (*QuoteMinOutput) ProtoMessage()               {}
func (*QuoteMinOutput) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{11} }

func (m *QuoteMinOutput) GetResults() []*QuoteMinSingle {
	if m != nil {
		return m.Results
	}
	return nil
}

// Level大单
type QuoteBOrder struct {
	ShiJian            int64 `protobuf:"varint,1,opt,name=ShiJian" json:"ShiJian,omitempty"`
	WeiTuoMaiRu        int64 `protobuf:"varint,2,opt,name=WeiTuoMaiRu" json:"WeiTuoMaiRu,omitempty"`
	WeiTuoMaiChu       int64 `protobuf:"varint,3,opt,name=WeiTuoMaiChu" json:"WeiTuoMaiChu,omitempty"`
	MaiRuZhongDanBiLi  int64 `protobuf:"varint,4,opt,name=MaiRuZhongDanBiLi" json:"MaiRuZhongDanBiLi,omitempty"`
	MaiRuDaDanBiLi     int64 `protobuf:"varint,5,opt,name=MaiRuDaDanBiLi" json:"MaiRuDaDanBiLi,omitempty"`
	MaiRuTeDaDanBiLi   int64 `protobuf:"varint,6,opt,name=MaiRuTeDaDanBiLi" json:"MaiRuTeDaDanBiLi,omitempty"`
	MaiChuZhongDanBiLi int64 `protobuf:"varint,7,opt,name=MaiChuZhongDanBiLi" json:"MaiChuZhongDanBiLi,omitempty"`
	MaiChuDaDanBiLi    int64 `protobuf:"varint,8,opt,name=MaiChuDaDanBiLi" json:"MaiChuDaDanBiLi,omitempty"`
	MaiChuTeDaDanBiLi  int64 `protobuf:"varint,9,opt,name=MaiChuTeDaDanBiLi" json:"MaiChuTeDaDanBiLi,omitempty"`
	DuanXianMaiRu      int64 `protobuf:"varint,10,opt,name=DuanXianMaiRu" json:"DuanXianMaiRu,omitempty"`
	DuanXianMaiChu     int64 `protobuf:"varint,11,opt,name=DuanXianMaiChu" json:"DuanXianMaiChu,omitempty"`
	DuanXianChiHuo     int64 `protobuf:"varint,12,opt,name=DuanXianChiHuo" json:"DuanXianChiHuo,omitempty"`
	DuanXianTuHuo      int64 `protobuf:"varint,13,opt,name=DuanXianTuHuo" json:"DuanXianTuHuo,omitempty"`
	DaDanLiuRuJinE     int64 `protobuf:"varint,14,opt,name=DaDanLiuRuJinE" json:"DaDanLiuRuJinE,omitempty"`
	DaDanLiuChuJinE    int64 `protobuf:"varint,15,opt,name=DaDanLiuChuJinE" json:"DaDanLiuChuJinE,omitempty"`
	DaDanJingLiuRuJinE int64 `protobuf:"varint,16,opt,name=DaDanJingLiuRuJinE" json:"DaDanJingLiuRuJinE,omitempty"`
}

func (m *QuoteBOrder) Reset()                    { *m = QuoteBOrder{} }
func (m *QuoteBOrder) String() string            { return proto.CompactTextString(m) }
func (*QuoteBOrder) ProtoMessage()               {}
func (*QuoteBOrder) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{12} }

func (m *QuoteBOrder) GetShiJian() int64 {
	if m != nil {
		return m.ShiJian
	}
	return 0
}

func (m *QuoteBOrder) GetWeiTuoMaiRu() int64 {
	if m != nil {
		return m.WeiTuoMaiRu
	}
	return 0
}

func (m *QuoteBOrder) GetWeiTuoMaiChu() int64 {
	if m != nil {
		return m.WeiTuoMaiChu
	}
	return 0
}

func (m *QuoteBOrder) GetMaiRuZhongDanBiLi() int64 {
	if m != nil {
		return m.MaiRuZhongDanBiLi
	}
	return 0
}

func (m *QuoteBOrder) GetMaiRuDaDanBiLi() int64 {
	if m != nil {
		return m.MaiRuDaDanBiLi
	}
	return 0
}

func (m *QuoteBOrder) GetMaiRuTeDaDanBiLi() int64 {
	if m != nil {
		return m.MaiRuTeDaDanBiLi
	}
	return 0
}

func (m *QuoteBOrder) GetMaiChuZhongDanBiLi() int64 {
	if m != nil {
		return m.MaiChuZhongDanBiLi
	}
	return 0
}

func (m *QuoteBOrder) GetMaiChuDaDanBiLi() int64 {
	if m != nil {
		return m.MaiChuDaDanBiLi
	}
	return 0
}

func (m *QuoteBOrder) GetMaiChuTeDaDanBiLi() int64 {
	if m != nil {
		return m.MaiChuTeDaDanBiLi
	}
	return 0
}

func (m *QuoteBOrder) GetDuanXianMaiRu() int64 {
	if m != nil {
		return m.DuanXianMaiRu
	}
	return 0
}

func (m *QuoteBOrder) GetDuanXianMaiChu() int64 {
	if m != nil {
		return m.DuanXianMaiChu
	}
	return 0
}

func (m *QuoteBOrder) GetDuanXianChiHuo() int64 {
	if m != nil {
		return m.DuanXianChiHuo
	}
	return 0
}

func (m *QuoteBOrder) GetDuanXianTuHuo() int64 {
	if m != nil {
		return m.DuanXianTuHuo
	}
	return 0
}

func (m *QuoteBOrder) GetDaDanLiuRuJinE() int64 {
	if m != nil {
		return m.DaDanLiuRuJinE
	}
	return 0
}

func (m *QuoteBOrder) GetDaDanLiuChuJinE() int64 {
	if m != nil {
		return m.DaDanLiuChuJinE
	}
	return 0
}

func (m *QuoteBOrder) GetDaDanJingLiuRuJinE() int64 {
	if m != nil {
		return m.DaDanJingLiuRuJinE
	}
	return 0
}

type QuoteBOrderSingle struct {
	Obj  string         `protobuf:"bytes,1,opt,name=Obj" json:"Obj,omitempty"`
	Data []*QuoteBOrder `protobuf:"bytes,2,rep,name=Data" json:"Data,omitempty"`
}

func (m *QuoteBOrderSingle) Reset()                    { *m = QuoteBOrderSingle{} }
func (m *QuoteBOrderSingle) String() string            { return proto.CompactTextString(m) }
func (*QuoteBOrderSingle) ProtoMessage()               {}
func (*QuoteBOrderSingle) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{13} }

func (m *QuoteBOrderSingle) GetObj() string {
	if m != nil {
		return m.Obj
	}
	return ""
}

func (m *QuoteBOrderSingle) GetData() []*QuoteBOrder {
	if m != nil {
		return m.Data
	}
	return nil
}

type QuoteBOrderOutput struct {
	Results []*QuoteBOrderSingle `protobuf:"bytes,1,rep,name=Results" json:"Results,omitempty"`
}

func (m *QuoteBOrderOutput) Reset()                    { *m = QuoteBOrderOutput{} }
func (m *QuoteBOrderOutput) String() string            { return proto.CompactTextString(m) }
func (*QuoteBOrderOutput) ProtoMessage()               {}
func (*QuoteBOrderOutput) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{14} }

func (m *QuoteBOrderOutput) GetResults() []*QuoteBOrderSingle {
	if m != nil {
		return m.Results
	}
	return nil
}

// 除权参数
type QuoteDivid struct {
	ShiJian         int64 `protobuf:"varint,1,opt,name=ShiJian" json:"ShiJian,omitempty"`
	ChuQuanChengShu int64 `protobuf:"varint,2,opt,name=ChuQuanChengShu" json:"ChuQuanChengShu,omitempty"`
	ChuQuanPianYi   int64 `protobuf:"varint,3,opt,name=ChuQuanPianYi" json:"ChuQuanPianYi,omitempty"`
}

func (m *QuoteDivid) Reset()                    { *m = QuoteDivid{} }
func (m *QuoteDivid) String() string            { return proto.CompactTextString(m) }
func (*QuoteDivid) ProtoMessage()               {}
func (*QuoteDivid) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{15} }

func (m *QuoteDivid) GetShiJian() int64 {
	if m != nil {
		return m.ShiJian
	}
	return 0
}

func (m *QuoteDivid) GetChuQuanChengShu() int64 {
	if m != nil {
		return m.ChuQuanChengShu
	}
	return 0
}

func (m *QuoteDivid) GetChuQuanPianYi() int64 {
	if m != nil {
		return m.ChuQuanPianYi
	}
	return 0
}

type QuoteDividSingle struct {
	Obj  string        `protobuf:"bytes,1,opt,name=Obj" json:"Obj,omitempty"`
	Data []*QuoteDivid `protobuf:"bytes,2,rep,name=Data" json:"Data,omitempty"`
}

func (m *QuoteDividSingle) Reset()                    { *m = QuoteDividSingle{} }
func (m *QuoteDividSingle) String() string            { return proto.CompactTextString(m) }
func (*QuoteDividSingle) ProtoMessage()               {}
func (*QuoteDividSingle) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{16} }

func (m *QuoteDividSingle) GetObj() string {
	if m != nil {
		return m.Obj
	}
	return ""
}

func (m *QuoteDividSingle) GetData() []*QuoteDivid {
	if m != nil {
		return m.Data
	}
	return nil
}

type QuoteDividOutput struct {
	Results []*QuoteDividSingle `protobuf:"bytes,1,rep,name=Results" json:"Results,omitempty"`
}

func (m *QuoteDividOutput) Reset()                    { *m = QuoteDividOutput{} }
func (m *QuoteDividOutput) String() string            { return proto.CompactTextString(m) }
func (*QuoteDividOutput) ProtoMessage()               {}
func (*QuoteDividOutput) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{17} }

func (m *QuoteDividOutput) GetResults() []*QuoteDividSingle {
	if m != nil {
		return m.Results
	}
	return nil
}

// 个股动态分时
type QuoteDynaMinSingle struct {
	Obj     string         `protobuf:"bytes,1,opt,name=Obj" json:"Obj,omitempty"`
	Data    []*GeGuDongTai `protobuf:"bytes,2,rep,name=Data" json:"Data,omitempty"`
	QingPan int64          `protobuf:"varint,3,opt,name=QingPan" json:"QingPan,omitempty"`
}

func (m *QuoteDynaMinSingle) Reset()                    { *m = QuoteDynaMinSingle{} }
func (m *QuoteDynaMinSingle) String() string            { return proto.CompactTextString(m) }
func (*QuoteDynaMinSingle) ProtoMessage()               {}
func (*QuoteDynaMinSingle) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{18} }

func (m *QuoteDynaMinSingle) GetObj() string {
	if m != nil {
		return m.Obj
	}
	return ""
}

func (m *QuoteDynaMinSingle) GetData() []*GeGuDongTai {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *QuoteDynaMinSingle) GetQingPan() int64 {
	if m != nil {
		return m.QingPan
	}
	return 0
}

// 逐笔
type QuoteReportSingle struct {
	Obj     string         `protobuf:"bytes,1,opt,name=Obj" json:"Obj,omitempty"`
	Data    []*ZhubiDangri `protobuf:"bytes,2,rep,name=Data" json:"Data,omitempty"`
	QingPan int64          `protobuf:"varint,3,opt,name=QingPan" json:"QingPan,omitempty"`
}

func (m *QuoteReportSingle) Reset()                    { *m = QuoteReportSingle{} }
func (m *QuoteReportSingle) String() string            { return proto.CompactTextString(m) }
func (*QuoteReportSingle) ProtoMessage()               {}
func (*QuoteReportSingle) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{19} }

func (m *QuoteReportSingle) GetObj() string {
	if m != nil {
		return m.Obj
	}
	return ""
}

func (m *QuoteReportSingle) GetData() []*ZhubiDangri {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *QuoteReportSingle) GetQingPan() int64 {
	if m != nil {
		return m.QingPan
	}
	return 0
}

// 委托队列
type QuoteQueueSingle struct {
	Obj  string          `protobuf:"bytes,1,opt,name=Obj" json:"Obj,omitempty"`
	Data []*WeiTuoDuiLie `protobuf:"bytes,2,rep,name=Data" json:"Data,omitempty"`
}

func (m *QuoteQueueSingle) Reset()                    { *m = QuoteQueueSingle{} }
func (m *QuoteQueueSingle) String() string            { return proto.CompactTextString(m) }
func (*QuoteQueueSingle) ProtoMessage()               {}
func (*QuoteQueueSingle) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{20} }

func (m *QuoteQueueSingle) GetObj() string {
	if m != nil {
		return m.Obj
	}
	return ""
}

func (m *QuoteQueueSingle) GetData() []*WeiTuoDuiLie {
	if m != nil {
		return m.Data
	}
	return nil
}

// 历史分时
type QuoteHistoryMinSingle struct {
	Obj     string         `protobuf:"bytes,1,opt,name=Obj" json:"Obj,omitempty"`
	Data    []*FenShiLishi `protobuf:"bytes,2,rep,name=Data" json:"Data,omitempty"`
	ZuoShou int64          `protobuf:"varint,3,opt,name=ZuoShou" json:"ZuoShou,omitempty"`
}

func (m *QuoteHistoryMinSingle) Reset()                    { *m = QuoteHistoryMinSingle{} }
func (m *QuoteHistoryMinSingle) String() string            { return proto.CompactTextString(m) }
func (*QuoteHistoryMinSingle) ProtoMessage()               {}
func (*QuoteHistoryMinSingle) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{21} }

func (m *QuoteHistoryMinSingle) GetObj() string {
	if m != nil {
		return m.Obj
	}
	return ""
}

func (m *QuoteHistoryMinSingle) GetData() []*FenShiLishi {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *QuoteHistoryMinSingle) GetZuoShou() int64 {
	if m != nil {
		return m.ZuoShou
	}
	return 0
}

// 资金流向
type QuoteFundFlow struct {
	ShiJian            int64 `protobuf:"varint,1,opt,name=ShiJian" json:"ShiJian,omitempty"`
	DaDanLiuRuJinE     int64 `protobuf:"varint,2,opt,name=DaDanLiuRuJinE" json:"DaDanLiuRuJinE,omitempty"`
	DaDanLiuChuJinE    int64 `protobuf:"varint,3,opt,name=DaDanLiuChuJinE" json:"DaDanLiuChuJinE,omitempty"`
	DaDanJingLiuRuJinE int64 `protobuf:"varint,4,opt,name=DaDanJingLiuRuJinE" json:"DaDanJingLiuRuJinE,omitempty"`
}

func (m *QuoteFundFlow) Reset()                    { *m = QuoteFundFlow{} }
func (m *QuoteFundFlow) String() string            { return proto.CompactTextString(m) }
func (*QuoteFundFlow) ProtoMessage()               {}
func (*QuoteFundFlow) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{22} }

func (m *QuoteFundFlow) GetShiJian() int64 {
	if m != nil {
		return m.ShiJian
	}
	return 0
}

func (m *QuoteFundFlow) GetDaDanLiuRuJinE() int64 {
	if m != nil {
		return m.DaDanLiuRuJinE
	}
	return 0
}

func (m *QuoteFundFlow) GetDaDanLiuChuJinE() int64 {
	if m != nil {
		return m.DaDanLiuChuJinE
	}
	return 0
}

func (m *QuoteFundFlow) GetDaDanJingLiuRuJinE() int64 {
	if m != nil {
		return m.DaDanJingLiuRuJinE
	}
	return 0
}

type QuoteFundFlowSingle struct {
	Obj  string           `protobuf:"bytes,1,opt,name=Obj" json:"Obj,omitempty"`
	Data []*QuoteFundFlow `protobuf:"bytes,2,rep,name=Data" json:"Data,omitempty"`
}

func (m *QuoteFundFlowSingle) Reset()                    { *m = QuoteFundFlowSingle{} }
func (m *QuoteFundFlowSingle) String() string            { return proto.CompactTextString(m) }
func (*QuoteFundFlowSingle) ProtoMessage()               {}
func (*QuoteFundFlowSingle) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{23} }

func (m *QuoteFundFlowSingle) GetObj() string {
	if m != nil {
		return m.Obj
	}
	return ""
}

func (m *QuoteFundFlowSingle) GetData() []*QuoteFundFlow {
	if m != nil {
		return m.Data
	}
	return nil
}

// 分时委托队列
type QuoteQueueMinSingle struct {
	Obj     string          `protobuf:"bytes,1,opt,name=Obj" json:"Obj,omitempty"`
	Data    []*WeiTuoDuiLie `protobuf:"bytes,2,rep,name=Data" json:"Data,omitempty"`
	QingPan int64           `protobuf:"varint,3,opt,name=QingPan" json:"QingPan,omitempty"`
}

func (m *QuoteQueueMinSingle) Reset()                    { *m = QuoteQueueMinSingle{} }
func (m *QuoteQueueMinSingle) String() string            { return proto.CompactTextString(m) }
func (*QuoteQueueMinSingle) ProtoMessage()               {}
func (*QuoteQueueMinSingle) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{24} }

func (m *QuoteQueueMinSingle) GetObj() string {
	if m != nil {
		return m.Obj
	}
	return ""
}

func (m *QuoteQueueMinSingle) GetData() []*WeiTuoDuiLie {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *QuoteQueueMinSingle) GetQingPan() int64 {
	if m != nil {
		return m.QingPan
	}
	return 0
}

func init() {
	proto.RegisterType((*QuoteDyna)(nil), "dzhyun.QuoteDyna")
	proto.RegisterType((*QuoteDynaSingle)(nil), "dzhyun.QuoteDynaSingle")
	proto.RegisterType((*QuoteDynaOutput)(nil), "dzhyun.QuoteDynaOutput")
	proto.RegisterType((*QuoteKline)(nil), "dzhyun.QuoteKline")
	proto.RegisterType((*QuoteKlineSingle)(nil), "dzhyun.QuoteKlineSingle")
	proto.RegisterType((*QuoteKlineOutput)(nil), "dzhyun.QuoteKlineOutput")
	proto.RegisterType((*QuoteTick)(nil), "dzhyun.QuoteTick")
	proto.RegisterType((*QuoteTickSingle)(nil), "dzhyun.QuoteTickSingle")
	proto.RegisterType((*QuoteTickOutput)(nil), "dzhyun.QuoteTickOutput")
	proto.RegisterType((*QuoteMin)(nil), "dzhyun.QuoteMin")
	proto.RegisterType((*QuoteMinSingle)(nil), "dzhyun.QuoteMinSingle")
	proto.RegisterType((*QuoteMinSingle_JiaoYiShiJianDuanJieGou)(nil), "dzhyun.QuoteMinSingle.JiaoYiShiJianDuanJieGou")
	proto.RegisterType((*QuoteMinOutput)(nil), "dzhyun.QuoteMinOutput")
	proto.RegisterType((*QuoteBOrder)(nil), "dzhyun.QuoteBOrder")
	proto.RegisterType((*QuoteBOrderSingle)(nil), "dzhyun.QuoteBOrderSingle")
	proto.RegisterType((*QuoteBOrderOutput)(nil), "dzhyun.QuoteBOrderOutput")
	proto.RegisterType((*QuoteDivid)(nil), "dzhyun.QuoteDivid")
	proto.RegisterType((*QuoteDividSingle)(nil), "dzhyun.QuoteDividSingle")
	proto.RegisterType((*QuoteDividOutput)(nil), "dzhyun.QuoteDividOutput")
	proto.RegisterType((*QuoteDynaMinSingle)(nil), "dzhyun.QuoteDynaMinSingle")
	proto.RegisterType((*QuoteReportSingle)(nil), "dzhyun.QuoteReportSingle")
	proto.RegisterType((*QuoteQueueSingle)(nil), "dzhyun.QuoteQueueSingle")
	proto.RegisterType((*QuoteHistoryMinSingle)(nil), "dzhyun.QuoteHistoryMinSingle")
	proto.RegisterType((*QuoteFundFlow)(nil), "dzhyun.QuoteFundFlow")
	proto.RegisterType((*QuoteFundFlowSingle)(nil), "dzhyun.QuoteFundFlowSingle")
	proto.RegisterType((*QuoteQueueMinSingle)(nil), "dzhyun.QuoteQueueMinSingle")
}

func init() { proto.RegisterFile("dzhoutput.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 1239 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe4, 0x57, 0xdd, 0x6e, 0xe3, 0x44,
	0x14, 0x56, 0xe2, 0x24, 0x6d, 0x26, 0xdb, 0x9f, 0x9d, 0x76, 0xbb, 0xde, 0x0a, 0xa1, 0x62, 0xa1,
	0x25, 0xac, 0x50, 0x04, 0x5d, 0xf1, 0x00, 0x9b, 0x98, 0xb6, 0x4a, 0xb3, 0x6d, 0xe3, 0x44, 0xc0,
	0x56, 0xdc, 0xb8, 0xcd, 0x28, 0x3e, 0x6c, 0x3a, 0x0e, 0x89, 0xa7, 0xa5, 0x7d, 0x0d, 0xc4, 0x23,
	0x70, 0xc5, 0x13, 0x20, 0xde, 0x8a, 0x4b, 0xae, 0xd0, 0x99, 0x19, 0xff, 0x8c, 0x13, 0x97, 0x2c,
	0xb7, 0x5c, 0xc5, 0xe7, 0x3b, 0x67, 0xe6, 0x9c, 0xf9, 0xbe, 0x73, 0xec, 0x09, 0xd9, 0x1a, 0x3d,
	0x04, 0xa1, 0x88, 0xa6, 0x22, 0x6a, 0x4d, 0x67, 0x61, 0x14, 0xd2, 0xda, 0xe8, 0x21, 0xb8, 0x17,
	0x7c, 0x7f, 0x5f, 0xfd, 0xb6, 0xc6, 0x62, 0x0a, 0x7e, 0xf8, 0x13, 0xb0, 0x29, 0xf8, 0x5c, 0xc5,
	0xec, 0xbf, 0x30, 0x7c, 0x13, 0xf0, 0xf9, 0xcf, 0x42, 0xbb, 0xa8, 0x76, 0x3d, 0x04, 0xe2, 0x0a,
	0x14, 0xe6, 0xfc, 0x51, 0x22, 0xf5, 0xbe, 0x08, 0x23, 0xe6, 0xde, 0x73, 0x9f, 0x52, 0x52, 0x19,
	0xc2, 0x0d, 0xb3, 0x4b, 0x07, 0xa5, 0x66, 0xd5, 0x93, 0xcf, 0xf4, 0x23, 0x52, 0xef, 0xf9, 0xf3,
	0xa8, 0x33, 0x09, 0xe7, 0xcc, 0x2e, 0x1f, 0x94, 0x9a, 0x65, 0x2f, 0x05, 0x70, 0xc5, 0x09, 0x8c,
	0x03, 0xdb, 0x92, 0x0e, 0xf9, 0x8c, 0xd8, 0xf9, 0x94, 0x71, 0xbb, 0xa2, 0x30, 0x7c, 0xa6, 0xdb,
	0xc4, 0xea, 0x85, 0x77, 0x76, 0x55, 0x42, 0xf8, 0x88, 0xc8, 0x19, 0xbb, 0xb3, 0x6b, 0x0a, 0x39,
	0x63, 0x77, 0x74, 0x8f, 0xd4, 0xbe, 0x0d, 0x27, 0xe2, 0x86, 0xd9, 0x6b, 0x12, 0xd4, 0x16, 0xe2,
	0x6f, 0x6e, 0x42, 0xc1, 0x23, 0x7b, 0x5d, 0xe1, 0xca, 0x72, 0x7a, 0x64, 0x2b, 0x29, 0x7d, 0x00,
	0x7c, 0x3c, 0x61, 0xb8, 0xe9, 0xf9, 0xd5, 0x8f, 0xb2, 0xfe, 0xba, 0x87, 0x8f, 0xf4, 0x33, 0x52,
	0x71, 0xfd, 0xc8, 0x97, 0x95, 0x37, 0x0e, 0x77, 0x5a, 0x9a, 0x83, 0x63, 0x76, 0x2c, 0xdc, 0x90,
	0x8f, 0x87, 0x3e, 0x78, 0x32, 0xc0, 0x71, 0x33, 0xbb, 0x9d, 0x4b, 0xd6, 0xe9, 0x57, 0x64, 0xcd,
	0x63, 0x73, 0x31, 0x89, 0xe6, 0x76, 0xe9, 0xc0, 0x6a, 0x36, 0x0e, 0x9f, 0xc7, 0xcb, 0x73, 0x79,
	0xbd, 0x38, 0xce, 0xf9, 0xab, 0x44, 0x88, 0x74, 0x9e, 0x4e, 0x80, 0xb3, 0xa5, 0x84, 0xc6, 0x94,
	0x95, 0x97, 0x50, 0x66, 0x2d, 0x52, 0x56, 0x49, 0x29, 0xdb, 0x25, 0x55, 0x25, 0x83, 0xa2, 0x51,
	0x19, 0x19, 0xda, 0x6a, 0x05, 0xb4, 0xad, 0x65, 0x69, 0x43, 0x41, 0x87, 0x70, 0xfd, 0xbe, 0x93,
	0x30, 0x5a, 0xf5, 0x52, 0x80, 0xda, 0x64, 0xed, 0xcd, 0xe8, 0xd6, 0xe7, 0xd7, 0xcc, 0xae, 0x4b,
	0x5f, 0x6c, 0xa2, 0xc7, 0x65, 0xd7, 0x78, 0x2c, 0x9b, 0x28, 0x8f, 0x36, 0x9d, 0x63, 0xb2, 0x9d,
	0x9e, 0xb9, 0x50, 0x89, 0x4f, 0x12, 0x25, 0x90, 0xca, 0x8d, 0x98, 0xca, 0xd3, 0xef, 0xc1, 0xe7,
	0x5a, 0x83, 0xa3, 0xec, 0x46, 0x5a, 0x84, 0xc3, 0xbc, 0x08, 0xb6, 0x21, 0x42, 0x26, 0x67, 0xaa,
	0xc2, 0x2f, 0x65, 0xdd, 0xd5, 0x78, 0xae, 0xa5, 0x22, 0xec, 0x92, 0xea, 0xc5, 0x0c, 0xae, 0xe3,
	0x8e, 0x56, 0x46, 0x86, 0x4a, 0xab, 0x80, 0xca, 0x4a, 0x31, 0x95, 0xd5, 0x3c, 0x95, 0xfb, 0x64,
	0xbd, 0x2d, 0xee, 0x55, 0x9a, 0xda, 0x81, 0xd5, 0x2c, 0x7b, 0x89, 0x8d, 0x2b, 0xdb, 0xe2, 0x3e,
	0x69, 0x77, 0x74, 0xa6, 0x00, 0x7a, 0x07, 0x6c, 0x32, 0x51, 0x4b, 0xd7, 0x95, 0x37, 0x01, 0xe8,
	0xc7, 0x84, 0xa0, 0xa1, 0x17, 0xd7, 0xa5, 0x3b, 0x83, 0x60, 0xb5, 0xe7, 0x22, 0x8a, 0xd8, 0x4c,
	0xeb, 0xa4, 0x2d, 0x07, 0x74, 0x87, 0x63, 0x85, 0x85, 0x2a, 0xbd, 0x32, 0x54, 0xda, 0x8b, 0xb9,
	0x3e, 0x62, 0xbc, 0x0d, 0x9d, 0x80, 0xf1, 0x71, 0x17, 0xfc, 0x50, 0xc9, 0x85, 0x1d, 0xd1, 0x07,
	0x3e, 0xbe, 0xf0, 0x55, 0xe3, 0x5a, 0x5e, 0x6c, 0x26, 0xc3, 0x84, 0xa9, 0x56, 0x1b, 0xa6, 0xb4,
	0xa8, 0x54, 0xc6, 0xbf, 0x4b, 0x64, 0x5d, 0x3a, 0xdf, 0x02, 0xff, 0xbf, 0xa9, 0xe8, 0xfc, 0x59,
	0x21, 0x9b, 0xf1, 0xe1, 0x0b, 0xd5, 0x72, 0x0c, 0xb5, 0x36, 0x33, 0x6a, 0x0d, 0x02, 0xfd, 0x62,
	0x43, 0xe2, 0x3c, 0xe8, 0x83, 0x96, 0x48, 0x3e, 0x23, 0x71, 0x83, 0x00, 0xfa, 0x42, 0x32, 0x61,
	0x79, 0xca, 0xa0, 0x2d, 0x42, 0xbb, 0x70, 0xc2, 0xba, 0x20, 0x55, 0x76, 0xc1, 0xe7, 0x83, 0x40,
	0x48, 0x46, 0x2c, 0x6f, 0x89, 0x87, 0xfe, 0x40, 0x9e, 0x62, 0x37, 0xbc, 0x83, 0x41, 0x00, 0x5d,
	0xf0, 0xb9, 0x2b, 0x7c, 0x2e, 0x39, 0x6a, 0x1c, 0xb6, 0x0c, 0x71, 0x93, 0x23, 0xb4, 0x16, 0xe2,
	0xbb, 0xc0, 0x8e, 0x43, 0xe1, 0x2d, 0x6e, 0x84, 0xdd, 0x75, 0x29, 0xc2, 0x41, 0x10, 0x0a, 0xf9,
	0x02, 0xb3, 0xbc, 0xd8, 0xcc, 0xf6, 0xdd, 0xba, 0xd1, 0x77, 0xb4, 0x49, 0xb6, 0x2e, 0x45, 0xe8,
	0x41, 0x17, 0xd8, 0x40, 0x6e, 0xee, 0xcb, 0xb7, 0x98, 0xe5, 0xe5, 0x61, 0xfa, 0x35, 0x69, 0xf4,
	0x30, 0x9d, 0xa2, 0xca, 0x26, 0xb2, 0xea, 0x1d, 0x93, 0xc0, 0x1e, 0xcc, 0x03, 0xf0, 0xb2, 0x71,
	0xfb, 0xbf, 0x95, 0xc8, 0xf3, 0x82, 0x33, 0xd0, 0x4f, 0xc9, 0xc6, 0xa9, 0x8f, 0xb8, 0x76, 0x49,
	0xa1, 0x2c, 0xcf, 0x04, 0x31, 0x0a, 0xcb, 0x08, 0x44, 0x1c, 0x55, 0x56, 0x51, 0x06, 0x88, 0xdd,
	0xa1, 0x96, 0x65, 0xa4, 0xcb, 0x20, 0xe8, 0x57, 0x0b, 0xa4, 0x5f, 0xa9, 0x98, 0x41, 0x9c, 0x76,
	0xda, 0x3c, 0x7a, 0xfe, 0xbe, 0xcc, 0xcf, 0xdf, 0xde, 0x72, 0x89, 0xd2, 0xf1, 0xfb, 0xb5, 0x4a,
	0x1a, 0xd2, 0xd7, 0x3e, 0x9f, 0x8d, 0xd8, 0x0c, 0x69, 0x37, 0x4f, 0x16, 0x9b, 0xf4, 0x80, 0x34,
	0xbe, 0x63, 0x30, 0x14, 0xe1, 0x5b, 0x1f, 0x3c, 0xa1, 0x4f, 0x94, 0x85, 0xa8, 0x43, 0x9e, 0x24,
	0x66, 0x27, 0x10, 0xfa, 0x44, 0x06, 0x46, 0xbf, 0x20, 0x4f, 0x65, 0xf0, 0x65, 0x10, 0xf2, 0xb1,
	0xeb, 0xf3, 0x36, 0xf4, 0xe2, 0xa3, 0x2d, 0x3a, 0xe8, 0x4b, 0xb2, 0x29, 0x41, 0xd7, 0x8f, 0x43,
	0x55, 0xa3, 0xe6, 0x50, 0xfa, 0x8a, 0x6c, 0x4b, 0x64, 0xc8, 0xd2, 0xc8, 0x9a, 0x8c, 0x5c, 0xc0,
	0x71, 0x00, 0x54, 0x2d, 0x46, 0x09, 0xaa, 0xfb, 0x96, 0x78, 0xb0, 0xdd, 0x14, 0x9a, 0x6e, 0xad,
	0x1a, 0x32, 0x0f, 0xeb, 0xb3, 0x75, 0x02, 0xa3, 0x8c, 0x7a, 0x72, 0x36, 0xd3, 0x81, 0x3d, 0x82,
	0x7d, 0x85, 0x5f, 0x46, 0xc5, 0x28, 0x51, 0x3d, 0x62, 0x80, 0xc8, 0x40, 0x06, 0x40, 0x56, 0x1b,
	0x8a, 0x01, 0x13, 0xcd, 0xc6, 0x75, 0x02, 0x38, 0x11, 0xa1, 0xfd, 0xc4, 0x8c, 0x53, 0x68, 0x36,
	0xeb, 0x50, 0x60, 0xd8, 0x86, 0x99, 0x55, 0x82, 0x72, 0x37, 0x2c, 0xb4, 0x07, 0xc2, 0x13, 0x5d,
	0xe0, 0xdf, 0xd8, 0x9b, 0x7a, 0x37, 0x03, 0x45, 0x6e, 0x62, 0xa4, 0x13, 0xa8, 0xc0, 0x2d, 0xc5,
	0x4d, 0x0e, 0x46, 0xd6, 0x25, 0x84, 0x6f, 0x97, 0x74, 0xd7, 0x6d, 0xc5, 0xfa, 0xa2, 0xc7, 0x39,
	0x23, 0x4f, 0x33, 0x6d, 0xb9, 0xc2, 0xcd, 0xcf, 0x18, 0xed, 0xcc, 0x52, 0x7d, 0xeb, 0x38, 0x31,
	0xf6, 0xd3, 0xe3, 0xf2, 0x3a, 0x3f, 0x2e, 0x2f, 0x96, 0x6c, 0x90, 0x9f, 0x98, 0x5b, 0x7d, 0xf9,
	0x73, 0xe1, 0x16, 0x46, 0x8f, 0xcc, 0x4b, 0x93, 0x6c, 0x75, 0x02, 0xd1, 0x17, 0x48, 0x3d, 0xe3,
	0x63, 0x7c, 0xcb, 0xaa, 0x99, 0xc9, 0xc3, 0xa8, 0x89, 0x86, 0x2e, 0xc0, 0xe7, 0xef, 0xe2, 0x57,
	0x81, 0x09, 0x3a, 0x3d, 0x7d, 0x6f, 0x92, 0x79, 0x0b, 0x09, 0x79, 0x69, 0x10, 0x42, 0xcd, 0xbb,
	0x2c, 0xae, 0xcc, 0xdd, 0xc2, 0x24, 0xb6, 0xda, 0x2d, 0x2c, 0x93, 0x38, 0x65, 0x03, 0x08, 0x4d,
	0xee, 0xc9, 0x8f, 0x7d, 0xc4, 0x0a, 0x84, 0x5a, 0xb8, 0xa2, 0x3f, 0x72, 0xdf, 0x08, 0xb4, 0x84,
	0x1e, 0x9b, 0x86, 0xb3, 0xe8, 0x43, 0x33, 0x5d, 0xe2, 0x1f, 0x22, 0xd7, 0xe7, 0xe3, 0xd9, 0xbf,
	0x67, 0x3a, 0xd3, 0xe4, 0xf4, 0x05, 0x13, 0xc5, 0x77, 0xdd, 0xa6, 0x91, 0x68, 0x37, 0x4e, 0xa4,
	0x5e, 0x77, 0xae, 0x80, 0x1e, 0x30, 0x4d, 0xf6, 0x84, 0x3c, 0x93, 0xfb, 0x9d, 0xc0, 0x3c, 0x0a,
	0x67, 0xf7, 0xff, 0x81, 0xa7, 0xec, 0xb7, 0x2a, 0xa9, 0x3e, 0xfe, 0x72, 0x5a, 0xc6, 0x97, 0xd3,
	0xf9, 0xbd, 0x44, 0x36, 0x64, 0xba, 0x23, 0xc1, 0x47, 0x47, 0x93, 0xf0, 0xee, 0x91, 0x26, 0x5d,
	0x1c, 0xf4, 0xf2, 0xaa, 0x83, 0x6e, 0x7d, 0xc8, 0xa0, 0x57, 0x0a, 0x07, 0xdd, 0x23, 0x3b, 0x46,
	0xb1, 0x85, 0xcc, 0x7c, 0x6e, 0x30, 0xf3, 0xcc, 0x68, 0xcd, 0x78, 0xb1, 0xe6, 0xfb, 0xbd, 0xde,
	0x53, 0xea, 0xf7, 0x18, 0xdb, 0x2b, 0x4b, 0x58, 0xdc, 0x2c, 0x6d, 0x4a, 0xb6, 0xaf, 0xc3, 0x9b,
	0x78, 0xa9, 0xfc, 0xc7, 0x7d, 0x55, 0x93, 0x3f, 0xaf, 0xff, 0x09, 0x00, 0x00, 0xff, 0xff, 0x41,
	0x64, 0xfc, 0xeb, 0xde, 0x0f, 0x00, 0x00,
}
