// Code generated by protoc-gen-go.
// source: dzhyun.gupiaolianxu.proto
// DO NOT EDIT!

package dzhyun

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type KXian struct {
	ShiJian          YFloat `protobuf:"varint,1,opt,name=ShiJian" json:"ShiJian,omitempty"`
	KaiPanJia        YFloat `protobuf:"varint,2,opt,name=KaiPanJia" json:"KaiPanJia,omitempty"`
	ZuiGaoJia        YFloat `protobuf:"varint,3,opt,name=ZuiGaoJia" json:"ZuiGaoJia,omitempty"`
	ZuiDiJia         YFloat `protobuf:"varint,4,opt,name=ZuiDiJia" json:"ZuiDiJia,omitempty"`
	ShouPanJia       YFloat `protobuf:"varint,5,opt,name=ShouPanJia" json:"ShouPanJia,omitempty"`
	ChengJiaoLiang   YFloat `protobuf:"varint,6,opt,name=ChengJiaoLiang" json:"ChengJiaoLiang,omitempty"`
	ChengJiaoE       YFloat `protobuf:"varint,7,opt,name=ChengJiaoE" json:"ChengJiaoE,omitempty"`
	ChengJiaoBiShu   YFloat `protobuf:"varint,8,opt,name=ChengJiaoBiShu" json:"ChengJiaoBiShu,omitempty"`
	ShangZhangJiaShu YFloat `protobuf:"varint,9,opt,name=ShangZhangJiaShu" json:"ShangZhangJiaShu,omitempty"`
	XiaDieJiaShu     YFloat `protobuf:"varint,10,opt,name=XiaDieJiaShu" json:"XiaDieJiaShu,omitempty"`
	ChiCang          YFloat `protobuf:"varint,11,opt,name=ChiCang" json:"ChiCang,omitempty"`
	ZengCang         YFloat `protobuf:"varint,12,opt,name=ZengCang" json:"ZengCang,omitempty"`
	ZengLiang        YFloat `protobuf:"varint,13,opt,name=ZengLiang" json:"ZengLiang,omitempty"`
	JieSuanJia       YFloat `protobuf:"varint,14,opt,name=JieSuanJia" json:"JieSuanJia,omitempty"`
}

func (m *KXian) Reset()                    { *m = KXian{} }
func (m *KXian) String() string            { return proto.CompactTextString(m) }
func (*KXian) ProtoMessage()               {}
func (*KXian) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{0} }

func (m *KXian) GetShiJian() YFloat {
	if m != nil {
		return m.ShiJian
	}
	return 0
}

func (m *KXian) GetKaiPanJia() YFloat {
	if m != nil {
		return m.KaiPanJia
	}
	return 0
}

func (m *KXian) GetZuiGaoJia() YFloat {
	if m != nil {
		return m.ZuiGaoJia
	}
	return 0
}

func (m *KXian) GetZuiDiJia() YFloat {
	if m != nil {
		return m.ZuiDiJia
	}
	return 0
}

func (m *KXian) GetShouPanJia() YFloat {
	if m != nil {
		return m.ShouPanJia
	}
	return 0
}

func (m *KXian) GetChengJiaoLiang() YFloat {
	if m != nil {
		return m.ChengJiaoLiang
	}
	return 0
}

func (m *KXian) GetChengJiaoE() YFloat {
	if m != nil {
		return m.ChengJiaoE
	}
	return 0
}

func (m *KXian) GetChengJiaoBiShu() YFloat {
	if m != nil {
		return m.ChengJiaoBiShu
	}
	return 0
}

func (m *KXian) GetShangZhangJiaShu() YFloat {
	if m != nil {
		return m.ShangZhangJiaShu
	}
	return 0
}

func (m *KXian) GetXiaDieJiaShu() YFloat {
	if m != nil {
		return m.XiaDieJiaShu
	}
	return 0
}

func (m *KXian) GetChiCang() YFloat {
	if m != nil {
		return m.ChiCang
	}
	return 0
}

func (m *KXian) GetZengCang() YFloat {
	if m != nil {
		return m.ZengCang
	}
	return 0
}

func (m *KXian) GetZengLiang() YFloat {
	if m != nil {
		return m.ZengLiang
	}
	return 0
}

func (m *KXian) GetJieSuanJia() YFloat {
	if m != nil {
		return m.JieSuanJia
	}
	return 0
}

type FenShi struct {
	ShiJian               YFloat `protobuf:"varint,1,opt,name=ShiJian" json:"ShiJian,omitempty"`
	ChengJiaoJia          YFloat `protobuf:"varint,2,opt,name=ChengJiaoJia" json:"ChengJiaoJia,omitempty"`
	ChengJiaoLiang        YFloat `protobuf:"varint,3,opt,name=ChengJiaoLiang" json:"ChengJiaoLiang,omitempty"`
	ChengJiaoE            YFloat `protobuf:"varint,4,opt,name=ChengJiaoE" json:"ChengJiaoE,omitempty"`
	JunJia                YFloat `protobuf:"varint,5,opt,name=JunJia" json:"JunJia,omitempty"`
	LingXianZhiBiao       YFloat `protobuf:"varint,6,opt,name=LingXianZhiBiao" json:"LingXianZhiBiao,omitempty"`
	DuoKongXian           YFloat `protobuf:"varint,7,opt,name=DuoKongXian" json:"DuoKongXian,omitempty"`
	WeiTuoMaiRuZongLiang  YFloat `protobuf:"varint,8,opt,name=WeiTuoMaiRuZongLiang" json:"WeiTuoMaiRuZongLiang,omitempty"`
	WeiTuoMaiChuZongLiang YFloat `protobuf:"varint,9,opt,name=WeiTuoMaiChuZongLiang" json:"WeiTuoMaiChuZongLiang,omitempty"`
}

func (m *FenShi) Reset()                    { *m = FenShi{} }
func (m *FenShi) String() string            { return proto.CompactTextString(m) }
func (*FenShi) ProtoMessage()               {}
func (*FenShi) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{1} }

func (m *FenShi) GetShiJian() YFloat {
	if m != nil {
		return m.ShiJian
	}
	return 0
}

func (m *FenShi) GetChengJiaoJia() YFloat {
	if m != nil {
		return m.ChengJiaoJia
	}
	return 0
}

func (m *FenShi) GetChengJiaoLiang() YFloat {
	if m != nil {
		return m.ChengJiaoLiang
	}
	return 0
}

func (m *FenShi) GetChengJiaoE() YFloat {
	if m != nil {
		return m.ChengJiaoE
	}
	return 0
}

func (m *FenShi) GetJunJia() YFloat {
	if m != nil {
		return m.JunJia
	}
	return 0
}

func (m *FenShi) GetLingXianZhiBiao() YFloat {
	if m != nil {
		return m.LingXianZhiBiao
	}
	return 0
}

func (m *FenShi) GetDuoKongXian() YFloat {
	if m != nil {
		return m.DuoKongXian
	}
	return 0
}

func (m *FenShi) GetWeiTuoMaiRuZongLiang() YFloat {
	if m != nil {
		return m.WeiTuoMaiRuZongLiang
	}
	return 0
}

func (m *FenShi) GetWeiTuoMaiChuZongLiang() YFloat {
	if m != nil {
		return m.WeiTuoMaiChuZongLiang
	}
	return 0
}

type FenShiLishi struct {
	Rows []*FenShi `protobuf:"bytes,1,rep,name=Rows" json:"Rows,omitempty"`
}

func (m *FenShiLishi) Reset()                    { *m = FenShiLishi{} }
func (m *FenShiLishi) String() string            { return proto.CompactTextString(m) }
func (*FenShiLishi) ProtoMessage()               {}
func (*FenShiLishi) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{2} }

func (m *FenShiLishi) GetRows() []*FenShi {
	if m != nil {
		return m.Rows
	}
	return nil
}

type DynaAlib struct {
	ShiJian YFloat          `protobuf:"varint,1,opt,name=ShiJian" json:"ShiJian,omitempty"`
	ID      YFloat          `protobuf:"varint,2,opt,name=ID" json:"ID,omitempty"`
	Objs    []string       `protobuf:"bytes,3,rep,name=Objs" json:"Objs,omitempty"`
	DAObjs  []*DynaAlibObj `protobuf:"bytes,4,rep,name=DAObjs" json:"DAObjs,omitempty"`
}

func (m *DynaAlib) Reset()                    { *m = DynaAlib{} }
func (m *DynaAlib) String() string            { return proto.CompactTextString(m) }
func (*DynaAlib) ProtoMessage()               {}
func (*DynaAlib) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{3} }

func (m *DynaAlib) GetShiJian() YFloat {
	if m != nil {
		return m.ShiJian
	}
	return 0
}

func (m *DynaAlib) GetID() YFloat {
	if m != nil {
		return m.ID
	}
	return 0
}

func (m *DynaAlib) GetObjs() []string {
	if m != nil {
		return m.Objs
	}
	return nil
}

func (m *DynaAlib) GetDAObjs() []*DynaAlibObj {
	if m != nil {
		return m.DAObjs
	}
	return nil
}

type DynaAlibObj struct {
	Objs []string `protobuf:"bytes,1,rep,name=Objs" json:"Objs,omitempty"`
}

func (m *DynaAlibObj) Reset()                    { *m = DynaAlibObj{} }
func (m *DynaAlibObj) String() string            { return proto.CompactTextString(m) }
func (*DynaAlibObj) ProtoMessage()               {}
func (*DynaAlibObj) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{4} }

func (m *DynaAlibObj) GetObjs() []string {
	if m != nil {
		return m.Objs
	}
	return nil
}

type BackUpState struct {
	Market            string `protobuf:"bytes,1,opt,name=Market" json:"Market,omitempty"`
	BackUpTime        YFloat  `protobuf:"varint,2,opt,name=BackUpTime" json:"BackUpTime,omitempty"`
	BackUpCloseStatus YFloat  `protobuf:"varint,3,opt,name=BackUpCloseStatus" json:"BackUpCloseStatus,omitempty"`
	CloseTime         YFloat  `protobuf:"varint,4,opt,name=CloseTime" json:"CloseTime,omitempty"`
	CloseStatus       YFloat  `protobuf:"varint,5,opt,name=CloseStatus" json:"CloseStatus,omitempty"`
}

func (m *BackUpState) Reset()                    { *m = BackUpState{} }
func (m *BackUpState) String() string            { return proto.CompactTextString(m) }
func (*BackUpState) ProtoMessage()               {}
func (*BackUpState) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{5} }

func (m *BackUpState) GetMarket() string {
	if m != nil {
		return m.Market
	}
	return ""
}

func (m *BackUpState) GetBackUpTime() YFloat {
	if m != nil {
		return m.BackUpTime
	}
	return 0
}

func (m *BackUpState) GetBackUpCloseStatus() YFloat {
	if m != nil {
		return m.BackUpCloseStatus
	}
	return 0
}

func (m *BackUpState) GetCloseTime() YFloat {
	if m != nil {
		return m.CloseTime
	}
	return 0
}

func (m *BackUpState) GetCloseStatus() YFloat {
	if m != nil {
		return m.CloseStatus
	}
	return 0
}

type LingxianDuokongZhibiao struct {
	ShiJian         YFloat `protobuf:"varint,1,opt,name=ShiJian" json:"ShiJian,omitempty"`
	LingXianZhiBiao YFloat `protobuf:"varint,2,opt,name=LingXianZhiBiao" json:"LingXianZhiBiao,omitempty"`
	DuoKongXian     YFloat `protobuf:"varint,3,opt,name=DuoKongXian" json:"DuoKongXian,omitempty"`
}

func (m *LingxianDuokongZhibiao) Reset()                    { *m = LingxianDuokongZhibiao{} }
func (m *LingxianDuokongZhibiao) String() string            { return proto.CompactTextString(m) }
func (*LingxianDuokongZhibiao) ProtoMessage()               {}
func (*LingxianDuokongZhibiao) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{6} }

func (m *LingxianDuokongZhibiao) GetShiJian() YFloat {
	if m != nil {
		return m.ShiJian
	}
	return 0
}

func (m *LingxianDuokongZhibiao) GetLingXianZhiBiao() YFloat {
	if m != nil {
		return m.LingXianZhiBiao
	}
	return 0
}

func (m *LingxianDuokongZhibiao) GetDuoKongXian() YFloat {
	if m != nil {
		return m.DuoKongXian
	}
	return 0
}

type LingxianDuokongZhibiaoStatus struct {
	JiaoYiRiQi  YFloat                   `protobuf:"varint,1,opt,name=JiaoYiRiQi" json:"JiaoYiRiQi,omitempty"`
	IndexStatuc YFloat                   `protobuf:"varint,2,opt,name=IndexStatuc" json:"IndexStatuc,omitempty"`
	DataStatus  *LingxianDuokongZhibiao `protobuf:"bytes,3,opt,name=DataStatus" json:"DataStatus,omitempty"`
}

func (m *LingxianDuokongZhibiaoStatus) Reset()                    { *m = LingxianDuokongZhibiaoStatus{} }
func (m *LingxianDuokongZhibiaoStatus) String() string            { return proto.CompactTextString(m) }
func (*LingxianDuokongZhibiaoStatus) ProtoMessage()               {}
func (*LingxianDuokongZhibiaoStatus) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{7} }

func (m *LingxianDuokongZhibiaoStatus) GetJiaoYiRiQi() YFloat {
	if m != nil {
		return m.JiaoYiRiQi
	}
	return 0
}

func (m *LingxianDuokongZhibiaoStatus) GetIndexStatuc() YFloat {
	if m != nil {
		return m.IndexStatuc
	}
	return 0
}

func (m *LingxianDuokongZhibiaoStatus) GetDataStatus() *LingxianDuokongZhibiao {
	if m != nil {
		return m.DataStatus
	}
	return nil
}

func init() {
	proto.RegisterType((*KXian)(nil), "dzhyun.KXian")
	proto.RegisterType((*FenShi)(nil), "dzhyun.FenShi")
	proto.RegisterType((*FenShiLishi)(nil), "dzhyun.FenShiLishi")
	proto.RegisterType((*DynaAlib)(nil), "dzhyun.DynaAlib")
	proto.RegisterType((*DynaAlibObj)(nil), "dzhyun.DynaAlibObj")
	proto.RegisterType((*BackUpState)(nil), "dzhyun.BackUpState")
	proto.RegisterType((*LingxianDuokongZhibiao)(nil), "dzhyun.LingxianDuokongZhibiao")
	proto.RegisterType((*LingxianDuokongZhibiaoStatus)(nil), "dzhyun.LingxianDuokongZhibiaoStatus")
}

func init() { proto.RegisterFile("dzhyun.gupiaolianxu.proto", fileDescriptor6) }

var fileDescriptor6 = []byte{
	// 645 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x8c, 0x54, 0xdb, 0x6e, 0xd3, 0x40,
	0x10, 0x55, 0xe2, 0x34, 0x6d, 0xc6, 0x25, 0x94, 0x05, 0x2a, 0x83, 0xaa, 0x2a, 0xf8, 0x01, 0x45,
	0x80, 0x2a, 0x51, 0x78, 0x46, 0x6a, 0x62, 0x40, 0x75, 0x5b, 0x15, 0xec, 0x22, 0x4a, 0xde, 0x36,
	0xed, 0xca, 0x9e, 0x5e, 0x76, 0xab, 0x26, 0x2b, 0x5a, 0x1e, 0xf8, 0x16, 0xfe, 0x81, 0xef, 0xe0,
	0x0f, 0xf8, 0x18, 0xb4, 0x17, 0xdb, 0xdb, 0xc4, 0x54, 0x7d, 0x49, 0x32, 0xe7, 0x8c, 0xcf, 0xce,
	0x9e, 0x33, 0x0e, 0x3c, 0x39, 0xfe, 0x91, 0x5f, 0x4b, 0xbe, 0x91, 0xc9, 0x0b, 0xa4, 0xe2, 0x0c,
	0x29, 0xbf, 0x92, 0x1b, 0x17, 0x97, 0x62, 0x2a, 0x48, 0xdb, 0x50, 0xe1, 0x1f, 0x0f, 0x16, 0x76,
	0x0e, 0x91, 0x72, 0x12, 0xc0, 0x62, 0x9a, 0x63, 0x8c, 0x94, 0x07, 0x8d, 0x5e, 0xa3, 0xef, 0x25,
	0x45, 0x49, 0xd6, 0xa0, 0xb3, 0x43, 0xf1, 0x13, 0xe5, 0x31, 0xd2, 0xa0, 0xa9, 0xb9, 0x0a, 0x50,
	0xec, 0x48, 0xe2, 0x47, 0x2a, 0x14, 0xeb, 0x19, 0xb6, 0x04, 0xc8, 0x53, 0x58, 0x1a, 0x49, 0x8c,
	0x94, 0x50, 0xd0, 0xd2, 0x64, 0x59, 0x93, 0x75, 0x80, 0x34, 0x17, 0xd2, 0x0a, 0x2f, 0x68, 0xd6,
	0x41, 0xc8, 0x73, 0xe8, 0x0e, 0x73, 0xc6, 0xb3, 0x18, 0xa9, 0xd8, 0x45, 0xca, 0xb3, 0xa0, 0xad,
	0x7b, 0x66, 0x50, 0xa5, 0x53, 0x22, 0xef, 0x83, 0x45, 0xa3, 0x53, 0x21, 0x37, 0x74, 0x06, 0x98,
	0xe6, 0x32, 0x58, 0x9a, 0xd1, 0xd1, 0x28, 0x79, 0x01, 0x2b, 0x69, 0x4e, 0x79, 0x36, 0x52, 0x1f,
	0x31, 0x52, 0xd5, 0xd9, 0xd1, 0x9d, 0x73, 0x38, 0x09, 0x61, 0xf9, 0x10, 0x69, 0x84, 0xcc, 0xf6,
	0x81, 0xee, 0xbb, 0x81, 0x29, 0x47, 0x87, 0x39, 0x0e, 0xd5, 0xe0, 0xbe, 0x71, 0xd4, 0x96, 0xda,
	0x15, 0xc6, 0x33, 0x4d, 0x2d, 0x5b, 0x57, 0x6c, 0xad, 0xfd, 0x64, 0x3c, 0x33, 0x17, 0xbe, 0x67,
	0xfd, 0x2c, 0x00, 0x75, 0xd7, 0x18, 0x59, 0x2a, 0x8d, 0x67, 0x5d, 0x73, 0xd7, 0x0a, 0x09, 0xff,
	0x36, 0xa1, 0xfd, 0x81, 0xf1, 0x34, 0xc7, 0x5b, 0x02, 0x0d, 0x61, 0xb9, 0xbc, 0x7a, 0x95, 0xe9,
	0x0d, 0xac, 0xc6, 0x7c, 0xef, 0x0e, 0xe6, 0xb7, 0xe6, 0xcc, 0x5f, 0x85, 0x76, 0x2c, 0x9d, 0x80,
	0x6d, 0x45, 0xfa, 0x70, 0x7f, 0x17, 0x79, 0xa6, 0x56, 0x6f, 0x94, 0xe3, 0x00, 0xa9, 0xb0, 0xe9,
	0xce, 0xc2, 0xa4, 0x07, 0x7e, 0x24, 0xc5, 0x8e, 0x30, 0xa8, 0xcd, 0xd7, 0x85, 0xc8, 0x26, 0x3c,
	0xfa, 0xca, 0xf0, 0x40, 0x8a, 0x3d, 0x8a, 0x89, 0x1c, 0x89, 0xc2, 0x3d, 0x13, 0x73, 0x2d, 0x47,
	0xde, 0xc2, 0xe3, 0x12, 0x1f, 0xe6, 0xce, 0x43, 0x26, 0xf1, 0x7a, 0x32, 0x7c, 0x0d, 0xbe, 0x71,
	0x77, 0x17, 0x27, 0x39, 0x92, 0x10, 0x5a, 0x89, 0xf8, 0x3e, 0x09, 0x1a, 0x3d, 0xaf, 0xef, 0x6f,
	0x76, 0x37, 0xec, 0xfb, 0x66, 0x5a, 0x12, 0xcd, 0x85, 0x12, 0x96, 0xa2, 0x6b, 0x4e, 0xb7, 0xce,
	0x70, 0x7c, 0x4b, 0x24, 0x5d, 0x68, 0x6e, 0x47, 0x36, 0x88, 0xe6, 0x76, 0x44, 0x08, 0xb4, 0xf6,
	0xc7, 0x27, 0x93, 0xc0, 0xeb, 0x79, 0xfd, 0x4e, 0xa2, 0x7f, 0x93, 0x97, 0xd0, 0x8e, 0xb6, 0x34,
	0xda, 0xd2, 0xe7, 0x3d, 0x2c, 0xce, 0x2b, 0xf4, 0xf7, 0xc7, 0x27, 0x89, 0x6d, 0x09, 0x9f, 0x81,
	0xef, 0xc0, 0xa5, 0x5e, 0xa3, 0xd2, 0x0b, 0x7f, 0x37, 0xc0, 0x1f, 0xd0, 0xa3, 0xd3, 0x2f, 0x17,
	0xe9, 0x94, 0x4e, 0x99, 0x8a, 0x6a, 0x8f, 0x5e, 0x9e, 0xb2, 0xa9, 0x1e, 0xae, 0x93, 0xd8, 0x4a,
	0x45, 0x6c, 0xda, 0x0e, 0xf0, 0x9c, 0xd9, 0x19, 0x1d, 0x84, 0xbc, 0x82, 0x07, 0xa6, 0x1a, 0x9e,
	0x89, 0x09, 0x53, 0x5a, 0x72, 0x62, 0xb7, 0x65, 0x9e, 0x50, 0xfb, 0xad, 0x4b, 0x2d, 0x66, 0xf6,
	0xa5, 0x02, 0x54, 0xd8, 0xae, 0x8a, 0xd9, 0x19, 0x17, 0x0a, 0x7f, 0xc2, 0xaa, 0xda, 0x90, 0x2b,
	0xa4, 0x3c, 0x92, 0xe2, 0x54, 0xa8, 0xf7, 0x12, 0xc7, 0x6a, 0x51, 0xfe, 0xef, 0x6e, 0xcd, 0xb2,
	0x35, 0xef, 0xb4, 0x6c, 0xde, 0xdc, 0xb2, 0x85, 0xbf, 0x1a, 0xb0, 0x56, 0x3f, 0x80, 0xbd, 0xa0,
	0x7e, 0x45, 0xa9, 0xf8, 0x86, 0x09, 0x7e, 0x46, 0x3b, 0x89, 0x83, 0xa8, 0x23, 0xb6, 0xf9, 0x31,
	0xbb, 0xd2, 0xed, 0x47, 0x76, 0x10, 0x17, 0x22, 0xef, 0x00, 0x22, 0x3a, 0xa5, 0x8e, 0x93, 0xfe,
	0xe6, 0x7a, 0x11, 0x76, 0xfd, 0xd9, 0x89, 0xf3, 0xc4, 0x80, 0xc0, 0xca, 0x91, 0x38, 0x2f, 0x1e,
	0xd0, 0x7f, 0xf8, 0xe3, 0xb6, 0xfe, 0x7a, 0xf3, 0x2f, 0x00, 0x00, 0xff, 0xff, 0xda, 0x72, 0x7b,
	0x83, 0x14, 0x06, 0x00, 0x00,
}
